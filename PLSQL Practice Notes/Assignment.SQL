/*
executing all the programs using ANONYMOUS block
*/

-- 1. write a program to insert employeeâ€™s annual salary having more than 15 Lakhs per month into table.
/*
APPROACH
1. from the above question it has been mentioned that we need to insert the annual salary of the employee who is having his/her monthly salary more than 15l.
2. but as per our emplployee table we are not having such employee having more than 15l due to which I am check with the annual sal having more than 15k.
3. First we need to create a table with empno, ename, sal,anu_sal to insert the details of employee having more than 15k per year.
4. this is an anonymous approach we are following.
*/

--TABLE CREATION
CREATE TABLE CK_EMP_15L(
    EMPNO NUMBER(4) NOT NULL,
    ENAME VARCHAR2(10),
    SAL NUMBER(7,2),
    ANU_SAL NUMBER(9,2)
);
DESC CK_EMP_15L;

--APPROACH 1 (USING FOR CURSOR)
DECLARE
CURSOR C1 IS  SELECT EMPNO,ENAME,SAL,(SAL*12) AS ANU_SAL FROM CK_EMP;
BEGIN
FOR REC IN C1 LOOP
IF (REC.ANU_SAL > 15000) THEN 
INSERT INTO CK_EMP_15L VALUES(REC.EMPNO,REC.ENAME,REC.SAL,REC.ANU_SAL); 
END IF;
END LOOP;
END;
/

--APPROACH 2 (USING COLLECTIONS)
DECLARE
TYPE EMP_TYP IS TABLE OF CK_EMP_15L%ROWTYPE INDEX BY BINARY_INTEGER;
E EMP_TYP;
BEGIN
SELECT EMPNO, ENAME, SAL, (SAL*12) AS ANU_SAL BULK COLLECT INTO E FROM CK_EMP WHERE (SAL*12) > 15000;

FOR I IN E.FIRST .. E.LAST LOOP

INSERT INTO CK_EMP_15L VALUES(E(I).EMPNO,E(I).ENAME,E(I).SAL,E(I).ANU_SAL);
DBMS_OUTPUT.PUT_LINE(E(I).ENAME || ' ' || E(I).ANU_SAL );
END LOOP;

END;
/
-- APPROACH 3 (Using SQL Statement)
BEGIN
EXECUTE IMMEDIATE 'Insert Into CK_EMP_15L Select EMPNO,ENAME,SAL,(SAL*12)
From CK_EMP Where Sal*(:MUL)>:V_SAL' USING 12,15000 ;
END;
/


SELECT * FROM CK_EMP_15L;

TRUNCATE TABLE CK_EMP_15L;

DECLARE
TYPE E IS RECORD(EMPNO EMP.EMPNO%TYPE, ENAME EMP.ENAME%TYPE, SAL EMP.SAL%TYPE, ANU_SAL NUMBER(9,2));

-- TYPE ENO IS TABLE OF CHANDAN_EMP_UPD_SAL.EMPNO%TYPE INDEX BY BINARY_INTEGER;
-- TYPE EN IS TABLE OF CHANDAN_EMP_UPD_SAL.ENAME%TYPE INDEX BY BINARY_INTEGER;
-- TYPE ES IS TABLE OF CHANDAN_EMP_UPD_SAL.SAL%TYPE INDEX BY BINARY_INTEGER;
TYPE E_TAB IS TABLE OF E INDEX BY BINARY_INTEGER;
E_TABLE E_TAB;
-- V_EMPNO ENO;
-- V_ENAME EN;
-- V_ES ES;
X NUMBER;
BEGIN
SELECT EMPNO,ENAME,SAL,(SAL*12) BULK COLLECT INTO E_TABLE FROM EMP_SRK;
FOR I IN E_TABLE.FIRST .. E_TABLE.LAST
LOOP
IF E_TABLE(I).ANU_SAL > 15000 THEN
    INSERT INTO CHANDAN_EMP_UPD_SAL VALUES (E_TABLE(I).EMPNO, E_TABLE(I).ENAME, E_TABLE(I).SAL, E_TABLE(I).ANU_SAL);
END IF;
END LOOP;
END;
/

-- 2. Write a program to insert employeeâ€™s working in the location New York and Sal grade 3 employees.

--TABLE CREATION

CREATE TABLE CK_EMP_LOC_UPD(
    EMPNO NUMBER(4),
    ENAME VARCHAR2(30),
    SAL NUMBER(9,2),
    LOC VARCHAR2(30),
    GRADE NUMBER(2)
);

-- USING FOR CURSOR
DECLARE
CURSOR C1 IS SELECT E.EMPNO,E.ENAME,E.SAL,D.LOC,S.GRADE FROM CK_EMP E, CK_DEPT D, CK_SALGRADE S WHERE E.DEPTNO = D.DEPTNO AND E.SAL BETWEEN S.LOSAL AND S.HISAL AND D.LOC = 'NEW YORK' AND S.GRADE = 4;
BEGIN
FOR REC IN C1 LOOP
INSERT INTO CK_EMP_LOC_UPD VALUES(REC.EMPNO,REC.ENAME,REC.SAL,REC.LOC,REC.GRADE);
DBMS_OUTPUT.PUT_LINE(REC.ENAME || REC.LOC || REC.GRADE);
END LOOP;
END;
/
SELECT * FROM CK_EMP_LOC_UPD;

--USING COLLECTIONS
DECLARE
TYPE EMP_TYP IS TABLE OF CK_EMP_LOC_UPD%ROWTYPE INDEX BY BINARY_INTEGER;
V_EMP_COLLEC EMP_TYP;
BEGIN
SELECT E.EMPNO,E.ENAME,E.SAL,D.LOC,S.GRADE BULK COLLECT INTO V_EMP_COLLEC FROM CK_EMP E, CK_DEPT D, CK_SALGRADE S WHERE E.DEPTNO = D.DEPTNO AND E.SAL BETWEEN S.LOSAL AND S.HISAL AND D.LOC = 'NEW YORK' AND S.GRADE = 4;
FOR I IN V_EMP_COLLEC.FIRST .. V_EMP_COLLEC.LAST LOOP
INSERT INTO CK_EMP_LOC_UPD VALUES V_EMP_COLLEC(I);
END LOOP;
END;
/

--USING SQL Statement

BEGIN
EXECUTE IMMEDIATE 'INSERT INTO CK_EMP_LOC_UPD SELECT E.EMPNO,E.ENAME,E.SAL,D.LOC,S.GRADE FROM CK_EMP E, CK_DEPT D, CK_SALGRADE S WHERE E.DEPTNO = D.DEPTNO AND E.SAL BETWEEN S.LOSAL AND S.HISAL AND D.LOC = ''NEW YORK'' AND S.GRADE = 4';
END;
/

SELECT * FROM CK_EMP_LOC_UPD;

-- 3. Write a program to insert employeeâ€™s having experience between 3 to 5 and working as clerks.

-- TABLE CREATION
CREATE TABLE EXP_CLERKS (
    EMPNO NUMBER(4),
    ENAME VARCHAR2(30),
    JOB VARCHAR2(10),
    HIREDATE DATE,
    EXPERIENCE NUMBER(3)
);
-- USING FOR CURSOR
DECLARE
CURSOR C1 IS SELECT EMPNO,ENAME,JOB,HIREDATE, ROUND(MONTHS_BETWEEN(SYSDATE,HIREDATE)/12) AS EXPERIENCE FROM CK_EMP WHERE JOB='CLERK' AND ROUND(MONTHS_BETWEEN(SYSDATE,HIREDATE)/12) BETWEEN 41 AND 43;
BEGIN
FOR REC IN C1 LOOP
INSERT INTO EXP_CLERKS VALUES(REC.EMPNO,REC.ENAME,REC.JOB,REC.HIREDATE,REC.EXPERIENCE);
DBMS_OUTPUT.PUT_LINE(REC.ENAME || REC.EXPERIENCE || REC.JOB);
END LOOP;
END;
/
SELECT * FROM EXP_CLERKS;
TRUNCATE TABLE EXP_CLERKS;

--USING COLLECTIONS
DECLARE
TYPE CLERKS_TAB IS TABLE OF EXP_CLERKS%ROWTYPE INDEX BY BINARY_INTEGER;
V_CLERKS_COLL CLERKS_TAB;
BEGIN
SELECT EMPNO,ENAME,JOB,HIREDATE, ROUND(MONTHS_BETWEEN(SYSDATE,HIREDATE)/12) AS EXPERIENCE BULK COLLECT INTO V_CLERKS_COLL FROM CK_EMP WHERE JOB='CLERK' AND ROUND(MONTHS_BETWEEN(SYSDATE,HIREDATE)/12) BETWEEN 41 AND 43;
FOR I IN V_CLERKS_COLL.FIRST .. V_CLERKS_COLL.LAST LOOP
INSERT INTO EXP_CLERKS VALUES V_CLERKS_COLL(I);
END LOOP;
END;
/

SELECT * FROM EXP_CLERKS;
TRUNCATE TABLE EXP_CLERKS;

--USING SQL Statement

BEGIN
EXECUTE IMMEDIATE 'INSERT INTO EXP_CLERKS SELECT EMPNO,ENAME,JOB,HIREDATE, ROUND(MONTHS_BETWEEN(SYSDATE,HIREDATE)/12) AS EXPERIENCE FROM CK_EMP WHERE JOB=''CLERK'' AND ROUND(MONTHS_BETWEEN(SYSDATE,HIREDATE)/12) BETWEEN 41 AND 43';
END;
/
SELECT * FROM EXP_CLERKS;
TRUNCATE TABLE EXP_CLERKS;

-- 4. Write a program to insert employeeâ€™s having same names and having experience between less than a year.

-- USING FOR CURSOR
DECLARE
CURSOR C1 IS SELECT * FROM CK_EMP_PRACTICE WHERE ENAME IN (SELECT ENAME FROM CK_EMP) AND ROUND(MONTHS_BETWEEN(SYSDATE,HIREDATE))<12;
BEGIN
FOR REC IN C1 LOOP
INSERT INTO CK_EMP_DEMO VALUES (REC.EMPNO,REC.ENAME,REC.JOB,REC.MGR,REC.HIREDATE,REC.SAL,REC.COMM,REC.DEPTNO);
DBMS_OUTPUT.PUT_LINE(REC.ENAME);
END LOOP;
END;
/

--USING COLLECTIONS
DECLARE
TYPE ENAMES_TAB IS TABLE OF CK_EMP_DEMO%ROWTYPE INDEX BY BINARY_INTEGER;
E ENAMES_TAB;
BEGIN
SELECT * BULK COLLECT INTO E FROM CK_EMP_PRACTICE WHERE ENAME IN (SELECT ENAME FROM CK_EMP) AND ROUND(MONTHS_BETWEEN(SYSDATE,HIREDATE))<12;
FOR I IN E.FIRST .. E.LAST LOOP
INSERT INTO CK_EMP_DEMO VALUES E(I);
DBMS_OUTPUT.PUT_LINE(E(I).ENAME);
END LOOP;
END;
/

-- USING SQL STATEMENT
BEGIN
EXECUTE IMMEDIATE 'INSERT INTO CK_EMP_DEMO SELECT * FROM CK_EMP_PRACTICE WHERE ENAME IN (SELECT ENAME FROM CK_EMP) AND ROUND(MONTHS_BETWEEN(SYSDATE,HIREDATE))<12';
IF SQL%ROWCOUNT >0 THEN
DBMS_OUTPUT.PUT_LINE('ROW inserted ðŸ˜Š');
ELSE
RAISE_APPLICATION_ERROR(-200001,'ERROR WHILE INSERTING THE DATA');
END IF;
END;
/

-- 5. Write a program to insert managers having more than 5 employees and having at least two Sales persons in a team and Sales persons hired in the years between 1976 and 1981

CREATE TABLE CK_MGR_DEMO(
    MGRID NUMBER(4) ,
    ENAME VARCHAR2(30)
);
--USING FOR CURSOR
DECLARE
CURSOR C1 IS SELECT * FROM CK_EMP WHERE EMPNO IN (
    SELECT MGR FROM CK_EMP GROUP BY MGR HAVING COUNT(*) >=5
) AND EMPNO IN (SELECT MGR FROM CK_EMP WHERE JOB = 'SALESMAN' AND TO_CHAR(HIREDATE,'YYYY') BETWEEN 1976 AND 1981 GROUP BY MGR HAVING COUNT(*)>=2);
BEGIN
FOR REC IN C1 LOOP
INSERT INTO CK_MGR_DEMO VALUES(REC.MGR,REC.ENAME);
DBMS_OUTPUT.PUT_LINE(REC.MGR ||' '|| REC.ENAME);
END LOOP;
END;    
/
SELECT * FROM CK_MGR_DEMO;

--USING COLLECTIONS
DECLARE
TYPE MGREMP IS TABLE OF CK_MGR_DEMO%ROWTYPE INDEX BY BINARY_INTEGER;
ME MGREMP;
BEGIN
SELECT EMPNO,ENAME  BULK COLLECT INTO ME FROM CK_EMP WHERE EMPNO IN (
    SELECT MGR FROM CK_EMP GROUP BY MGR HAVING COUNT(*) >=5
) AND EMPNO IN (SELECT MGR FROM CK_EMP WHERE JOB = 'SALESMAN' AND TO_CHAR(HIREDATE,'YYYY') BETWEEN 1976 AND 1981 GROUP BY MGR HAVING COUNT(*)>=2);

FOR I IN ME.FIRST .. ME.LAST LOOP
INSERT INTO CK_MGR_DEMO VALUES ME(I);
DBMS_OUTPUT.PUT_LINE(ME(I).MGRID ||' '|| ME(I).ENAME);
END LOOP;
END;
/

--USING SQL STATEMENT
BEGIN 
EXECUTE IMMEDIATE 'INSERT INTO CK_MGR_DEMO SELECT EMPNO,ENAME FROM CK_EMP WHERE EMPNO IN (
    SELECT MGR FROM CK_EMP GROUP BY MGR HAVING COUNT(*) >=5
) AND EMPNO IN (SELECT MGR FROM CK_EMP WHERE JOB = ''SALESMAN'' AND TO_CHAR(HIREDATE,''YYYY'') BETWEEN 1976 AND 1981 GROUP BY MGR HAVING COUNT(*)>=2)';
END;
/
SELECT * FROM CK_MGR_DEMO;














