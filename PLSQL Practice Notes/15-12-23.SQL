--TRIGGERS

--Write a program to change dept. name into capital letter automatically while inserting data.

-- TRIGGER CREATION:

DROP PROCEDURE DEPT_TRIG1;
CREATE OR REPLACE TRIGGER DEPT_TRIG1
BEFORE INSERT ON DEPT
FOR EACH ROW
BEGIN
:NEW.DNAME := UPPER(:NEW.DNAME);
END;
/

--CHECKING

INSERT INTO DEPT VALUES(50,'maths','hyd');

--Write a trigger program to raise error if updated salary < existing salary.
-- Trigger Creation:
CREATE OR REPLACE TRIGGER EMP_UPD_TRIG 
BEFORE UPDATE ON EMP
FOR EACH ROW
BEGIN
IF :NEW.SAL < :OLD.SAL THEN
RAISE_APPLICATION_ERROR(-20001, 'Newly entered Salary should be greater than the Existing Salary');
END IF;
END;
/
-- ROLLBACK SEGMENT:
-- :OLD.EMPNO = 7788, :OLD.ENAME=SCOTT, :OLD.SAL=3000 .....:OLD.DEPTNO=20
-- :NEW.SAL=2000, :NEW.EMPNO=7788

UPDATE EMP SET SAL=2000 WHERE EMPNO 7788;

--Write a trigger program after deleted recod from db to take employee record backup for auditing purpose
--Table Creation:

--create employee backup table with the same structure of EMP table
CREATE TABLE EMP_BACKUP AS SELECT * FROM EMP WHERE 1=2;

--Trigger Creation:
CREATE OR REPLACE TRIGGER EMP_DEL_TRIG
AFTER DELETE ON EMP
FOR EACH ROW
BEGIN
INSERT INTO EMP_BACKUP VALUES(:OLD.EMPNO, :OLD.ENAME, :OLD.JOB, :OLD.MGR, :OLD.HIREDATE, :OLD.SAL, :OLD.COMM, :OLD.DEPTNO);
COMMIT;
END;
/
--CHECKING
DELETE FROM EMP WHERE EMPNO=7788;

--Write a trigger program to perform DML Commands on EMP table and to maintain daily status in EMPLOYEE STATUS DB.

--TABLE CREATION
CREATE TABLE EMP_STATUS(
    EMPID NUMBER(4),
    SDATE DATE,
    STATUS VARCHAR(100)
    );
-- TRIGGER:
CREATE OR REPLACE TRIGGER EMP_STATUS_TRIG
AFTER INSERT OR UPDATE OR DELETE ON EMP
FOR EACH ROW
BEGIN
IF INSERTING THEN
INSERT INTO EMP_STATUS VALUES ( :NEW.EMPNO ,SYSDATE,'Inserted');
ELSIF UPDATING THEN
INSERT INTO EMP_STATUS VALUES (:NEW.EMPNO ,SYSDATE,'Updated');
ELSIF DELETING THEN
INSERT INTO EMP_STATUS VALUES(:OLD.EMPNO,SYSDATE,'Deleted');
END IF;
END;
/

-- II. STATEMENT LEVEL TRIGGERS:
-----------------------------------------
--Write a trigger program to restrict DML commands on EMPLOYEE based on following conditions
-- i. office timings are 10 am to 5 pm.
-- ii. weekends holidays (saturday and sunday)
-- iii. on public holidays are aslo holiday

--TABLE CREATION
--** CREATE PLUBLIC holiday TABLE WITH HOLIDAY DATES
CREATE TABLE HOLIDAY (HDATE DATE);
INSERT INTO HOLIDAY VALUES ('26-JAN-23');
INSERT INTO HOLIDAY VALUES ('15-AUG-23');
INSERT INTO HOLIDAY VALUES ('25-DEC-23');

-- TRIGGER PROGRAM:
CREATE OR REPLACE TRIGGER HOLIDAY_TRIG
BEFORE INSERT OR UPDATE OR DELETE ON EMP
DECLARE 
CNT NUMBER;
BEGIN
IF TO_CHAR(SYSDATE,'HH24') NOT BETWEEN 10 AND 17 THEN
RAISE_APPLICATION_ERROR(-20001,'Employee can work only between 10 AM to 5 PM on Weekdays');
END IF;

IF TO_CHAR(SYSDATE,'DW') IN ('SAT','SUN') THEN
RAISE_APPLICATION_ERROR(-20001,'WEEKENDS, HOLIDAY');
END IF;

SELECT COUNT(*) INTO CNT FROM HOLIDAY WHERE TRUNC(HDATE) = TRUNC(SYSDATE);

IF CNT > 0 THEN
RAISE_APPLICATION_ERROR(-20001,'Public Holiday, Employee cannot perform any operation');
END IF;

END;
/

--III.INSTEAD OF TRIGGERS:
--------------------------
CREATE TABLE STD_MAS(
    STD_ID VARCHAR(10),
    STD_NAME VARCHAR(10),
    CLASS VARCHAR(10)
);
CREATE TABLE STD_MARKS(
    STD_ID VARCHAR(10),
    MATHS NUMBER(6,2),
    PHYS NUMBER(6,2),
    CHEM NUMBER(6,2)
)

-- view a complex view:
CREATE OR REPLACE VIEW STD_COMP_VIEW AS
SELECT S.STD_ID, S.STD_NAME, S.CLASS, ST.MATHS, ST.PHYS, ST.CHEM FROM STD_MAS S, STD_MARKS ST WHERE S.STD_ID = ST.STD_ID;

INSERT INTO STD_COMP_VIEW VALUES('S1','KING','XI',90,80,80);

 
 CREATE OR REPLACE TRIGGER STD_COMP_VIEW_TRIG
 INSTEAD OF INSERT ON STD_COMP_VIEW
 FOR EACH ROW
 BEGIN
 INSERT INTO STD_MAS VALUES(:NEW.STD_ID,:NEW.STD_NAME,:NEW.CLASS);
 INSERT INTO STD_MARKS VALUES(:NEW.STD_ID,:NEW.MATHS,:NEW.PHYS,:NEW.CHEM);
 END;
 /

--IV. SCHEMA/DDL TRIGGERS

-- -Write a trigger program to restrict DROP command on DB objects.
CREATE OR REPLACE TRIGGER DROP_TRIG
BEFORE DROP ON SCHEMA
BEGIN
RAISE_APPLICATION_ERROR (-20001, 'Restricted Drop Command');
END;
/

-- NOTE: ONLY SCHEMA LEVEL TRIGGER PROGRAMS ARE DROPPED

-- SQL * LOADERS
/*
STEP-1:  OPEN A NOTEPAD FILES IN 'D' DRIVE WITH NAME EMP.TXT
STEP-2: CREATE EMPLOYEE TABLE WITH 4 COLUMNS
STEP-3: OPEN A NOTEPAD FILE 'D' DRIVE WITH NAME AS 'MYCTL.CTL'
LOAD DATA
INFILE 'D:EMP.TXT'
INSERT INTO TABLE EMPLOY
FIELDS TERMINATED BY ',' 
(EMPNO, ENAME, SAL, DEPTNO)

STEP-4: 
GOTO COMMAND PROMPT
TYPE SQLLDR CHADNA/CJHANDAN <USERNAME>/<PASSWORD>

CONTROL = D:\MYCTL.CTL

STEP-5:
 CHECK DB TABLE

**TO COPY EXCEL SHEET DATA INTO ORACLE DB
1. SAVE EXCEL SHEET WITH '.CSV' EXTENSION AND REMAING STEPS ARE SAME
LOAD DATA
INFILE 'D:EMP.CSV'
INSERT INTO TABLE EMPLOY
FIELDS TERMINATED BY ',' 
(EMPNO, ENAME, SAL, DEPTNO)
*/
DROP TABLE EMPLOY;
CREATE TABLE EMPLOY(
    EMPNO NUMBER(4),
    ENAME VARCHAR(10),
    SAL NUMBER(8,2),
    DEPTNO NUMBER(2)
);

-- EXPORT & IMPORT
/*
--EXPORT
STEP-1:
GO TO COMMAND PROMPT
TYPE EXP
EXPORT FOLE: EXPDAT.DMP > d:\<username>.dmp 
*/

